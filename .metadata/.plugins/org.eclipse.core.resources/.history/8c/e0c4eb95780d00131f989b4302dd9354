package Generator;

import android.R.integer;
import Bing.StaticMap;

public class Template {

	//static fields
	public static final int TEMPLATE_1 = 1;
	public static final int TEMPLATE_2 = 2;
	public static final int TEMPLATE_3 = 3;

	//private instance fields
	protected Slot[] slots = null; // slots[0] == Top Left Photo
	private Slot mapSlot;

	private StaticMap map = null; // map in center of collage
	protected int remainingVerticalSlots = 0; // current number of slots filled
	/**
	 * Template can only be created by static methods
	 * @param slotsInTemplate
	 * @param width map pixel width 
	 * @param height map pixel height
	 */
	protected Template(int slotsInTemplate, int vericalSlots) {
		slots = new Slot[slotsInTemplate];
		this.remainingVerticalSlots = vericalSlots;
	}

	public int getCurrentNumberOfSlots() {
		return filledSlotsCounter;
	}

	public int getNumberOfSlots() {
		return slots.length;
	}
	
	public Slot getSlot(int number) {
		return slots[number];
	}

	public boolean isTemplateFull() {
		return (slots.length == slots.length - ());
	}
	
	public Slot getMapSlot() {
		return this.mapSlot;
	}
	
	public int getEmptyVerticalCount() {
		
	}
	
	public int getEmptyHorizontalCount() {
		
	}
	
	public double getMapPixelWidth() {
		return mapSlot.getSlotWidth();
	}

	public double getMapPixelHeight() {
		return mapSlot.getSlotHeight();
	}

	public boolean setMap(StaticMap newMap) {
		if (newMap.getPixelWidth() == this.getMapPixelWidth() && // only add map if it meets the planned map dimension
				newMap.getPixelHeight() == this.getMapPixelHeight()) {
			map = newMap;
			return true;
		}
		else {
			return false;
		}
	}
	
	public static Template getTemplate(int num) {
		Template template = null;
		switch (num) {
		case 1:
			template =  getTemplate1();
		default:
			break;
		}
		
		return template;
	}

	/**
	 * Constructing hard-coded template1
	 * @return
	 */
	private static Template getTemplate1() {
		Template template = new Template(8);

		// building slots - Counter Clockwise, starting with topLeft
		template.slots[0] = new Slot(new PixelPoint(0, 367), new PixelPoint(642, 1224));
		template.slots[1] = new Slot(new PixelPoint(0, 1224), new PixelPoint(642, 2080));
		template.slots[2] = new Slot(new PixelPoint(775, 1805), new PixelPoint(1632, 2448));
		template.slots[3] = new Slot(new PixelPoint(1632, 1805), new PixelPoint(2488, 2448));
		template.slots[4] = new Slot(new PixelPoint(2621, 1224), new PixelPoint(3264, 2080));
		template.slots[5] = new Slot(new PixelPoint(2621, 367), new PixelPoint(3264, 1224));
		template.slots[6] = new Slot(new PixelPoint(1632, 0), new PixelPoint(2488, 642));
		template.slots[5] = new Slot(new PixelPoint(775, 0), new PixelPoint(1632, 642));

		template.mapSlot = new Slot(new PixelPoint(642, 642), new PixelPoint(2621, 1805));

		return template;
	}
	
	@Override
	public String toString() {
		StringBuffer buffer = new StringBuffer("[");
		for (int i = 0; i<slots.length; i++) {
			buffer.append(i + "=" + slots[i].getSlotWidth() + "," + slots[i].getSlotHeight() + ";" );
		}
		
		buffer.append("map=" + mapSlot.getSlotWidth() + "," + mapSlot.getSlotHeight());
		buffer.append("]");
		
		return buffer.toString();
	}

}
