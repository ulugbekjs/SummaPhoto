package PhotoListener;
import static org.junit.Assert.*;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;

import org.junit.Test;

import ActivationManager.ActivationManagerThread;
import Bing.BingServices;
import Bing.SamplePost;
import Common.Photo;
import Common.Point;

import com.drew.imaging.ImageMetadataReader;
import com.drew.imaging.ImageProcessingException;
import com.drew.metadata.Metadata;


public class ListenerTestCases {

	@Test
	public void extractionTest() {

		PhotoListenerThread t = new PhotoListenerThread();

		File directory = new File("/Users/yonatan/Documents/workspace/WorkshopRepository/photos/");
		for (File file : directory.listFiles()) {
			Photo p = null;
			try {
				p = t.createPhotoFromFile(file);
			} catch (ImageProcessingException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			if (p != null) {
				ActivationManagerThread.getInstance().addToBuffer(p);
			}
		}

		ActivationManagerThread.getInstance().processPhotoBuffer();
	}

	@Test
	public void bingTest() {
		FileReader reader = new FileReader(new File("/Users/yonatan/Documents/workspace/WorkshopRepository/photos"));
		BufferedReader bw = new BufferedReader(reader);
		String line;
		Point[] points = new Point[100];
		int i =0;
		while ((line = bw.readLine()) != null) {
			String[] partsString = line.split(",");
			points[i] = (new Point(new Double(partsString[0]), new Double(partsString[1])));
			i++;
		}
		
		bw.close();
		BingServices.getStaticMap(points);
	}
}
