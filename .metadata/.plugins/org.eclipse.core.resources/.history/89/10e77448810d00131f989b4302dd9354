package Generator;

import java.util.Iterator;
import java.util.List;

import android.R.integer;

public abstract class AbstractTemplate {

	//static fields
	public static final int TEMPLATE_1 = 1;
	public static final int TEMPLATE_2 = 2;
	public static final int TEMPLATE_3 = 3;

	//private instance fields
	protected Slot[] slots = null; // slots[0] == Top Left Photo
	protected List<Integer> verticalSlots;
	private Iterator<Integer> verticalIterator = null;
	protected List<Integer> horizontalSlots;
	private Iterator<Integer> horizontalIterator = null;

	public AbstractTemplate(int slotsInTemplate) {
		slots = new Slot[slotsInTemplate];
	}

	public int getCurrentNumberOfSlots() {
		return getNumberOfSlots() - horizontalSlots.size() - verticalSlots.size();
	}

	public int getNumberOfSlots() {
		return slots.length;
	}

	public Slot getSlot(int number) {
		return slots[number];
	}

	public boolean isTemplateFull() {
		return (slots.length == getCurrentNumberOfSlots());
	}

	public int getRemainingVerticalSlots() {
		return verticalSlots.size();
	}
	
	public int getRemainingHorizontalSlots() {
		return horizontalSlots.size();
	}
	
	protected void addSlot(Slot slot, int index) {
		this.slots[index] = slot;
		this.verticalSlots.add(index);
	}
	
	public getNextVerticalSlot() {
		
	}

}

