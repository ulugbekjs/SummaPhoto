package Generator;

import android.R.integer;
import Common.Photo;

/**
 * Represents a fixed empty space for a photo in a template
 * @author yonatan
 *
 */
public class Slot{

	private PixelPoint topLeft;
	private PixelPoint bottomRight;
	private PixelPoint topRight;
	private PixelPoint bottomLeft;
	
	private int proportionateWidth;
	private int proportionateHeight;


	private boolean horizontal;	
	private String path = null; // the photo that fills the slot

	public Slot(PixelPoint topLeft, PixelPoint bottomRight) {
		this.topLeft = topLeft;
		this.bottomRight = bottomRight;
		this.topRight = new PixelPoint(bottomRight.getX(), topLeft.getY());
		this.bottomLeft = new PixelPoint(topLeft.getX(), bottomRight.getY());
		this.horizontal = (getSlotWidth() > getSlotHeight()); 
	}

	public void assignToPhoto(Photo photo) {
		if (photo != null) {
			this.path = photo.getFilePath();
		}
	}

	public String getPhotoPath() {
		return this.path;
	}
	public boolean isAssignedToPhoto() {
		return (path != null);
	}

	public PixelPoint getTopLeft() {
		return this.topLeft;
	}

	public PixelPoint getTopRight() {
		return this.topRight;
	}

	public PixelPoint getBottomLeft() {
		return this.bottomLeft;
	}

	public PixelPoint getBottomRight() {
		return this.bottomRight;
	}

	public boolean isHorizontal() {
		return this.horizontal;
	}
	
	public double getSlotWidth() {
		return Math.abs(bottomRight.distanceFrom(new PixelPoint(topLeft.getX(), bottomRight.getY())));
	}

	public double getSlotHeight() {
		return Math.abs(bottomRight.distanceFrom(new PixelPoint(bottomRight.getX(), topLeft.getY())));
	}
	
	private int[] getProportionateDimensions() {
		int[] ret = new int[2];
		
		int height = (int) getSlotHeight();
		int width = (int) getSlotWidth();
		
		double proportion = 0;
	
		proportion = horizontal ? (height / width) : (width / height); 
		
		if (proportion < 0.75) {
			
		}
			
	}
	
	public int getSlotProportionateWidth() {
		return proportionateWidth;
	}

	public int getSlotProportionateHeight() {
		return proportionateHeight;
	}



}
